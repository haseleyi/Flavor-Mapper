{"ast":null,"code":"var _jsxFileName = \"/Users/ihaseley/Dev/Flavor-Mapper/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FlavorSearch from './components/FlavorSearch';\nimport FlavorResults from './components/FlavorResults';\nimport FlavorVisualization from './components/FlavorVisualization';\nimport './App.css';\nimport flavorData from './assets/flavorData.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedFlavors, setSelectedFlavors] = useState([]);\n  const [matchingPairings, setMatchingPairings] = useState([]);\n  const [allIngredients, setAllIngredients] = useState([]);\n\n  // Extract all unique ingredients for the dropdown\n  useEffect(() => {\n    const ingredients = flavorData.map(item => item.main);\n    setAllIngredients(ingredients.sort());\n  }, []);\n\n  // Find matching pairings when selected flavors change\n  useEffect(() => {\n    if (selectedFlavors.length === 0) {\n      setMatchingPairings([]);\n      return;\n    }\n\n    // Find all pairings for each selected flavor\n    const allPairings = selectedFlavors.map(flavor => {\n      const flavorObj = flavorData.find(item => item.main === flavor);\n      return flavorObj ? flavorObj.pairing : [];\n    });\n\n    // Find the intersection of all pairings\n    let commonPairings = allPairings[0];\n    for (let i = 1; i < allPairings.length; i++) {\n      commonPairings = commonPairings.filter(item => allPairings[i].includes(item));\n    }\n    setMatchingPairings(commonPairings);\n  }, [selectedFlavors]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Flavor Mapper\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Explore a database of food pairings recommended by top chefs!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-layout\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-container\",\n          children: [/*#__PURE__*/_jsxDEV(FlavorSearch, {\n            allIngredients: allIngredients,\n            selectedFlavors: selectedFlavors,\n            setSelectedFlavors: setSelectedFlavors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FlavorResults, {\n            matchingPairings: matchingPairings,\n            selectedFlavors: selectedFlavors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"visualization-container\",\n          children: /*#__PURE__*/_jsxDEV(FlavorVisualization, {\n            selectedFlavors: selectedFlavors,\n            matchingPairings: matchingPairings\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Na80vDmdzXimLlRoirhMO6c+D7Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","FlavorSearch","FlavorResults","FlavorVisualization","flavorData","jsxDEV","_jsxDEV","App","_s","selectedFlavors","setSelectedFlavors","matchingPairings","setMatchingPairings","allIngredients","setAllIngredients","ingredients","map","item","main","sort","length","allPairings","flavor","flavorObj","find","pairing","commonPairings","i","filter","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ihaseley/Dev/Flavor-Mapper/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FlavorSearch from './components/FlavorSearch';\nimport FlavorResults from './components/FlavorResults';\nimport FlavorVisualization from './components/FlavorVisualization';\nimport './App.css';\nimport flavorData from './assets/flavorData.json';\n\nfunction App() {\n  const [selectedFlavors, setSelectedFlavors] = useState([]);\n  const [matchingPairings, setMatchingPairings] = useState([]);\n  const [allIngredients, setAllIngredients] = useState([]);\n\n  // Extract all unique ingredients for the dropdown\n  useEffect(() => {\n    const ingredients = flavorData.map(item => item.main);\n    setAllIngredients(ingredients.sort());\n  }, []);\n\n  // Find matching pairings when selected flavors change\n  useEffect(() => {\n    if (selectedFlavors.length === 0) {\n      setMatchingPairings([]);\n      return;\n    }\n\n    // Find all pairings for each selected flavor\n    const allPairings = selectedFlavors.map(flavor => {\n      const flavorObj = flavorData.find(item => item.main === flavor);\n      return flavorObj ? flavorObj.pairing : [];\n    });\n\n    // Find the intersection of all pairings\n    let commonPairings = allPairings[0];\n    for (let i = 1; i < allPairings.length; i++) {\n      commonPairings = commonPairings.filter(item => \n        allPairings[i].includes(item)\n      );\n    }\n\n    setMatchingPairings(commonPairings);\n  }, [selectedFlavors]);\n\n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <h1>Flavor Mapper</h1>\n        <p>Explore a database of food pairings recommended by top chefs!</p>\n      </header>\n      \n      <div className=\"container\">\n        <div className=\"app-layout\">\n          <div className=\"search-container\">\n            <FlavorSearch \n              allIngredients={allIngredients} \n              selectedFlavors={selectedFlavors} \n              setSelectedFlavors={setSelectedFlavors} \n            />\n            <FlavorResults \n              matchingPairings={matchingPairings} \n              selectedFlavors={selectedFlavors}\n            />\n          </div>\n          \n          <div className=\"visualization-container\">\n            <FlavorVisualization \n              selectedFlavors={selectedFlavors} \n              matchingPairings={matchingPairings} \n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}