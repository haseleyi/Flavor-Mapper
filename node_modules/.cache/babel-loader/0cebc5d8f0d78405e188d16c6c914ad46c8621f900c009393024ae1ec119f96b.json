{"ast":null,"code":"var _jsxFileName = \"/Users/ihaseley/Dev/Flavor-Mapper/src/components/FlavorVisualization.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport './FlavorVisualization.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FlavorVisualization = ({\n  selectedFlavors,\n  matchingPairings\n}) => {\n  _s();\n  const svgRef = useRef();\n  useEffect(() => {\n    if (!selectedFlavors.length) {\n      const emptyMessage = d3.select(svgRef.current).html(null).append('text').attr('x', '50%').attr('y', '50%').attr('text-anchor', 'middle').attr('dominant-baseline', 'middle').attr('class', 'empty-visualization-text').text('Select ingredients to see flavor connections');\n      return;\n    }\n\n    // Clear previous visualization\n    d3.select(svgRef.current).html(null);\n\n    // Create data structure for the visualization\n    const nodes = [...selectedFlavors.map(flavor => ({\n      id: flavor,\n      group: 1,\n      selected: true\n    })), ...matchingPairings.map(pairing => ({\n      id: pairing,\n      group: 2,\n      selected: false\n    }))];\n    const links = [];\n\n    // Create links from each selected flavor to each matching pairing\n    selectedFlavors.forEach(flavor => {\n      matchingPairings.forEach(pairing => {\n        links.push({\n          source: flavor,\n          target: pairing,\n          value: 1\n        });\n      });\n    });\n\n    // If there are no connections to show\n    if (links.length === 0 && selectedFlavors.length > 0) {\n      const emptyMessage = d3.select(svgRef.current).html(null).append('text').attr('x', '50%').attr('y', '50%').attr('text-anchor', 'middle').attr('dominant-baseline', 'middle').attr('class', 'empty-visualization-text').text('No common pairings found for these ingredients together');\n      return;\n    }\n\n    // Get dimensions of the container\n    const width = svgRef.current.clientWidth;\n    const height = svgRef.current.clientHeight || 400;\n\n    // Create the force simulation\n    const simulation = d3.forceSimulation(nodes).force('link', d3.forceLink(links).id(d => d.id).distance(100)).force('charge', d3.forceManyBody().strength(-200)).force('center', d3.forceCenter(width / 2, height / 2)).force('collision', d3.forceCollide().radius(30));\n\n    // Create the SVG elements\n    const svg = d3.select(svgRef.current);\n\n    // Add links (connections)\n    const link = svg.append('g').attr('class', 'links').selectAll('line').data(links).enter().append('line').attr('stroke', '#999').attr('stroke-opacity', 0.6).attr('stroke-width', d => Math.sqrt(d.value));\n\n    // Add nodes (ingredients)\n    const node = svg.append('g').attr('class', 'nodes').selectAll('g').data(nodes).enter().append('g');\n\n    // Add circles for each node\n    const circles = node.append('circle').attr('r', d => d.selected ? 20 : 15).attr('fill', d => d.selected ? '#3498db' : '#e74c3c').call(d3.drag().on('start', dragstarted).on('drag', dragged).on('end', dragended));\n\n    // Add labels for each node\n    const labels = node.append('text').text(d => d.id).attr('x', 0).attr('y', d => d.selected ? 30 : 25).attr('text-anchor', 'middle').attr('class', d => d.selected ? 'node-text selected' : 'node-text');\n\n    // Add title for hover effect\n    node.append('title').text(d => d.id);\n\n    // Update positions on each tick of the simulation\n    simulation.on('tick', () => {\n      link.attr('x1', d => d.source.x).attr('y1', d => d.source.y).attr('x2', d => d.target.x).attr('y2', d => d.target.y);\n      node.attr('transform', d => {\n        // Keep nodes within bounds\n        d.x = Math.max(20, Math.min(width - 20, d.x));\n        d.y = Math.max(20, Math.min(height - 30, d.y));\n        return `translate(${d.x},${d.y})`;\n      });\n    });\n\n    // Drag functions\n    function dragstarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    function dragended(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n\n    // Clean up on unmount\n    return () => {\n      simulation.stop();\n    };\n  }, [selectedFlavors, matchingPairings]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flavor-visualization\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Flavor Connections\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"visualization-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        className: \"visualization-svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), selectedFlavors.length > 0 && matchingPairings.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"visualization-legend\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"legend-color\",\n          style: {\n            backgroundColor: '#3498db'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Selected ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"legend-color\",\n          style: {\n            backgroundColor: '#e74c3c'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Matching pairings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n_s(FlavorVisualization, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = FlavorVisualization;\nexport default FlavorVisualization;\nvar _c;\n$RefreshReg$(_c, \"FlavorVisualization\");","map":{"version":3,"names":["React","useEffect","useRef","d3","jsxDEV","_jsxDEV","FlavorVisualization","selectedFlavors","matchingPairings","_s","svgRef","length","emptyMessage","select","current","html","append","attr","text","nodes","map","flavor","id","group","selected","pairing","links","forEach","push","source","target","value","width","clientWidth","height","clientHeight","simulation","forceSimulation","force","forceLink","d","distance","forceManyBody","strength","forceCenter","forceCollide","radius","svg","link","selectAll","data","enter","Math","sqrt","node","circles","call","drag","on","dragstarted","dragged","dragended","labels","x","y","max","min","event","active","alphaTarget","restart","fx","fy","stop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/ihaseley/Dev/Flavor-Mapper/src/components/FlavorVisualization.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport './FlavorVisualization.css';\n\nconst FlavorVisualization = ({ selectedFlavors, matchingPairings }) => {\n  const svgRef = useRef();\n  \n  useEffect(() => {\n    if (!selectedFlavors.length) {\n      const emptyMessage = d3.select(svgRef.current)\n        .html(null)\n        .append('text')\n        .attr('x', '50%')\n        .attr('y', '50%')\n        .attr('text-anchor', 'middle')\n        .attr('dominant-baseline', 'middle')\n        .attr('class', 'empty-visualization-text')\n        .text('Select ingredients to see flavor connections');\n      return;\n    }\n\n    // Clear previous visualization\n    d3.select(svgRef.current).html(null);\n\n    // Create data structure for the visualization\n    const nodes = [\n      ...selectedFlavors.map(flavor => ({ id: flavor, group: 1, selected: true })),\n      ...matchingPairings.map(pairing => ({ id: pairing, group: 2, selected: false }))\n    ];\n\n    const links = [];\n    \n    // Create links from each selected flavor to each matching pairing\n    selectedFlavors.forEach(flavor => {\n      matchingPairings.forEach(pairing => {\n        links.push({\n          source: flavor,\n          target: pairing,\n          value: 1\n        });\n      });\n    });\n\n    // If there are no connections to show\n    if (links.length === 0 && selectedFlavors.length > 0) {\n      const emptyMessage = d3.select(svgRef.current)\n        .html(null)\n        .append('text')\n        .attr('x', '50%')\n        .attr('y', '50%')\n        .attr('text-anchor', 'middle')\n        .attr('dominant-baseline', 'middle')\n        .attr('class', 'empty-visualization-text')\n        .text('No common pairings found for these ingredients together');\n      return;\n    }\n\n    // Get dimensions of the container\n    const width = svgRef.current.clientWidth;\n    const height = svgRef.current.clientHeight || 400;\n\n    // Create the force simulation\n    const simulation = d3.forceSimulation(nodes)\n      .force('link', d3.forceLink(links).id(d => d.id).distance(100))\n      .force('charge', d3.forceManyBody().strength(-200))\n      .force('center', d3.forceCenter(width / 2, height / 2))\n      .force('collision', d3.forceCollide().radius(30));\n\n    // Create the SVG elements\n    const svg = d3.select(svgRef.current);\n\n    // Add links (connections)\n    const link = svg.append('g')\n      .attr('class', 'links')\n      .selectAll('line')\n      .data(links)\n      .enter()\n      .append('line')\n      .attr('stroke', '#999')\n      .attr('stroke-opacity', 0.6)\n      .attr('stroke-width', d => Math.sqrt(d.value));\n\n    // Add nodes (ingredients)\n    const node = svg.append('g')\n      .attr('class', 'nodes')\n      .selectAll('g')\n      .data(nodes)\n      .enter()\n      .append('g');\n\n    // Add circles for each node\n    const circles = node.append('circle')\n      .attr('r', d => d.selected ? 20 : 15)\n      .attr('fill', d => d.selected ? '#3498db' : '#e74c3c')\n      .call(d3.drag()\n        .on('start', dragstarted)\n        .on('drag', dragged)\n        .on('end', dragended));\n\n    // Add labels for each node\n    const labels = node.append('text')\n      .text(d => d.id)\n      .attr('x', 0)\n      .attr('y', d => d.selected ? 30 : 25)\n      .attr('text-anchor', 'middle')\n      .attr('class', d => d.selected ? 'node-text selected' : 'node-text');\n\n    // Add title for hover effect\n    node.append('title')\n      .text(d => d.id);\n\n    // Update positions on each tick of the simulation\n    simulation.on('tick', () => {\n      link\n        .attr('x1', d => d.source.x)\n        .attr('y1', d => d.source.y)\n        .attr('x2', d => d.target.x)\n        .attr('y2', d => d.target.y);\n\n      node\n        .attr('transform', d => {\n          // Keep nodes within bounds\n          d.x = Math.max(20, Math.min(width - 20, d.x));\n          d.y = Math.max(20, Math.min(height - 30, d.y));\n          return `translate(${d.x},${d.y})`;\n        });\n    });\n\n    // Drag functions\n    function dragstarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n\n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n\n    function dragended(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n\n    // Clean up on unmount\n    return () => {\n      simulation.stop();\n    };\n  }, [selectedFlavors, matchingPairings]);\n\n  return (\n    <div className=\"flavor-visualization\">\n      <h2>Flavor Connections</h2>\n      <div className=\"visualization-wrapper\">\n        <svg ref={svgRef} className=\"visualization-svg\"></svg>\n      </div>\n      {selectedFlavors.length > 0 && matchingPairings.length > 0 && (\n        <div className=\"visualization-legend\">\n          <div className=\"legend-item\">\n            <span className=\"legend-color\" style={{ backgroundColor: '#3498db' }}></span>\n            <span>Selected ingredients</span>\n          </div>\n          <div className=\"legend-item\">\n            <span className=\"legend-color\" style={{ backgroundColor: '#e74c3c' }}></span>\n            <span>Matching pairings</span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FlavorVisualization;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}